generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  sessionId    String   @id @map("session_id") @db.VarChar(6)
  adminId      String   @map("admin_id") @db.VarChar(50)
  createdAt    DateTime @default(now()) @map("created_at")
  expiresAt    DateTime @map("expires_at")
  
  selectedPlatforms Json @default("[]") @map("selected_platforms")
  viewingMode       String? @map("viewing_mode") @db.VarChar(20)

  maxParticipants   Int @default(8) @map("max_participants")

  status      String @default("setup") @db.VarChar(20)
  currentStep String @default("platforms") @map("current_step") @db.VarChar(50)

  // ‼️ KROK 1: Dodana kolumna na wyniki analizy grupowej
  group_analysis Json? @map("group_analysis")

  // Relacja do profili
  profiles SessionProfile[]

  @@map("sessions")
}

model SessionProfile {
  id        Int      @id @default(autoincrement())
  sessionId String   @map("session_id") @db.VarChar(6)
  userId    String   @map("user_id") @db.VarChar(50)

  platform    String  @db.VarChar(20)
  username    String  @db.Text
  pic_url     String? @map("pic_url") @db.Text
  posts       String? @db.Text
  quiz_result Json?   @map("quiz_result") @default("{}")
  seen        String[] @default([])

  // Pola Social Media Analysis (bez zmian)
  social_posts           Json?     @map("social_posts")
  social_analysis_status String?   @map("social_analysis_status") @db.VarChar(20)
  social_analysis_error  String?   @map("social_analysis_error") @db.Text
  social_analyzed_at     DateTime? @map("social_analyzed_at")

  // ‼️ ZWIĘKSZONY LIMIT: Charakterystyka LLM (600 znaków)
  llm_characterization String? @map("llm_characterization") @db.VarChar(600)

  // ‼️ KROK 1: Dodana kolumna na wyniki analizy indywidualnej
  individual_analysis Json? @map("individual_analysis")

  // Metadane
  isAdmin     Boolean  @default(false) @map("is_admin")
  hasJoined   Boolean  @default(false) @map("has_joined")
  createdAt   DateTime @default(now()) @map("created_at")

  // Relacja do sesji
  session Session @relation(fields: [sessionId], references: [sessionId], onDelete: Cascade)

  @@unique([sessionId, userId])
  @@map("session_profiles")
}